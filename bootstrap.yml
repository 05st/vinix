declare_options:
  - name: prod
    default: 'false'

sources:
  - name: binutils
    subdir: '3rdparty'
    url: 'https://ftp.gnu.org/gnu/binutils/binutils-2.37.tar.xz'
    format: 'tar.xz'
    extract_path: 'binutils-2.37'
    patch-path-strip: 1
    version: '2.37'

  - name: gcc
    subdir: '3rdparty'
    url: 'https://ftp.gnu.org/gnu/gcc/gcc-11.2.0/gcc-11.2.0.tar.xz'
    format: 'tar.xz'
    extract_path: 'gcc-11.2.0'
    patch-path-strip: 1
    version: '11.2.0'
    regenerate:
      - args: ['./contrib/download_prerequisites']
        workdir: '@THIS_SOURCE_DIR@'

  - name: glibc
    subdir: '3rdparty'
    url: 'https://ftp.gnu.org/gnu/glibc/glibc-2.34.tar.xz'
    format: 'tar.xz'
    extract_path: 'glibc-2.34'
    patch-path-strip: 1
    version: '2.34'

  - name: v
    subdir: '3rdparty'
    sources_required: ['vc']
    git: 'https://github.com/vlang/v.git'
    branch: 'master'
    commit: 'd373eba79bf166aeb0226c7ac811db504a8d98a9'
    rolling_version: true
    version: '0.0pl@ROLLING_ID@'

  - name: vc
    subdir: '3rdparty'
    git: 'https://github.com/vlang/vc.git'
    branch: 'master'
    commit: '2d26151d223ef676ea964caeaa7074ac49247b0f'
    rolling_version: true
    version: '0.0pl@ROLLING_ID@'

  - name: limine
    subdir: '3rdparty'
    git: 'https://github.com/limine-bootloader/limine.git'
    tag: 'v2.59.1'
    version: '2.59.1'

tools:
  - name: host-v
    from_source: v
    compile:
      - args: |
          set -e
          rm -rf "@PREFIX@/v"
          mkdir -p "@PREFIX@/v"
          cp -rv "@THIS_SOURCE_DIR@/." "@PREFIX@/v/"
          cd "@PREFIX@/v"
          rm -v *.xbstrap
          cc -std=gnu11 -I ./thirdparty/stdatomic/nix -w -o ./v "@SOURCE_ROOT@/3rdparty/vc/v.c" -lm -lpthread $([ $(uname) = Linux ] || echo -lexecinfo)
          VMODULES=/tmp/.vmodules ./v self
          mkdir -p "@PREFIX@/bin"
          ln -sf "@PREFIX@/v/v" "@PREFIX@/bin/v"

  - name: host-limine
    from_source: limine
    tools_required:
      - host-gcc
    compile:
      - args: |
          set -e
          cd "@THIS_SOURCE_DIR@"
          make limine-bios limine-uefi limine-uefi32 TOOLCHAIN=x86_64-vinix-linux-gnu
          make bin/limine-install
    install:
      - args: |
          set -e
          cd "@THIS_SOURCE_DIR@"
          make install PREFIX="@PREFIX@"

  - name: host-binutils
    from_source: binutils
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--target=x86_64-vinix-linux-gnu'
        - '--with-sysroot=@SYSROOT_DIR@'
        - '--disable-werror'
        - '--disable-nls'
        - '--enable-targets=x86_64-elf,x86_64-pe'
        - 'CFLAGS=-O2 -pipe'
    compile:
      - args: ['make', '-j@PARALLELISM@', 'all-binutils', 'all-gas', 'all-ld']
    install:
      - args: ['make', 'install-strip-binutils', 'install-strip-gas', 'install-strip-ld']

  - name: host-gcc
    from_source: gcc
    tools_required:
      - tool: host-binutils
        recursive: true

    stages:
      - name: bootstrap-compiler
        compile:
          - args:
            - '@THIS_SOURCE_DIR@/configure'
            - '--prefix=@PREFIX@'
            - '--target=x86_64-vinix-linux-gnu'
            - '--with-sysroot=@SYSROOT_DIR@'
            - '--with-newlib'
            - '--without-headers'
            - '--disable-shared'
            - '--disable-nls'
            - '--enable-languages=c,c++'
            - '--disable-multilib'
            - '--enable-initfini-array'
            - '--disable-decimal-float'
            - '--disable-threads'
            - '--disable-libatomic'
            - '--disable-libgomp'
            - '--disable-libquadmath'
            - '--disable-libssp'
            - '--disable-libvtv'
            - '--disable-libstdcxx'
            - '--disable-gcov'
            - 'CFLAGS=-O2 -pipe'
            - 'CXXFLAGS=-O2 -pipe'
          - args: ['make', '-j@PARALLELISM@', 'all-gcc']
        install:
          - args: ['make', 'install-gcc']
          # GCC does *not* look for target-prefixed LD/AS.
          # Instead, it searches a list of prefix directories. Link AS/LD to make it happy.
          - args: ['mkdir', '-p', '@PREFIX@/x86_64-vinix-linux-gnu/bin']
          - args: ['ln', '-sf', '../../../host-binutils/x86_64-vinix-linux-gnu/bin/as',
                               '@PREFIX@/x86_64-vinix-linux-gnu/bin/as']
          - args: ['ln', '-sf', '../../../host-binutils/x86_64-vinix-linux-gnu/bin/ld',
                               '@PREFIX@/x86_64-vinix-linux-gnu/bin/ld']

      - name: bootstrap-libgcc
        tools_required:
          - tool: host-gcc
            stage_dependencies: [bootstrap-compiler]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libgcc']
        install:
          - args: ['make', 'install-strip-target-libgcc']

      - name: compiler
        tools_required:
          - bootstrap-glibc
        compile:
          - args: |
              set -e
              rm -rf *
          - args:
            - '@THIS_SOURCE_DIR@/configure'
            - '--prefix=@PREFIX@'
            - '--target=x86_64-vinix-linux-gnu'
            - '--with-sysroot=@SYSROOT_DIR@'
            - '--disable-nls'
            - '--enable-languages=c,c++'
            - '--disable-multilib'
            - '--enable-initfini-array'
            - 'CFLAGS=-O2 -pipe'
            - 'CXXFLAGS=-O2 -pipe'
          - args: ['make', '-j@PARALLELISM@', 'all-gcc']
        install:
          - args: ['make', 'install-gcc']

      - name: libgcc
        tools_required:
          - tool: host-gcc
            stage_dependencies: [compiler]
          - bootstrap-glibc
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libgcc']
        install:
          - args: ['make', 'install-strip-target-libgcc']

      - name: libstdc++
        tools_required:
          - tool: host-gcc
            stage_dependencies: [libgcc]
        pkgs_required:
          - glibc
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libstdc++-v3']
        install:
          - args: ['make', 'install-strip-target-libstdc++-v3']

  - name: bootstrap-glibc
    from_source: glibc
    tools_required:
      - tool: host-gcc
        stage_dependencies: [bootstrap-libgcc]
    stages:
      - name: bootstrap-glibc-stage
        pkgs_required:
          - linux-headers
        compile:
          - args: |
              set -e
              "@THIS_SOURCE_DIR@/configure" \
                  --prefix=/usr \
                  --host=x86_64-vinix-linux-gnu \
                  --build="$("@SOURCE_ROOT@/3rdparty/gcc/config.guess")" \
                  --enable-kernel=3.2 \
                  --with-headers=@SYSROOT_DIR@/usr/include \
                  libc_cv_slibdir=/usr/lib
            environ:
              CFLAGS: '-O2 -pipe'
          - args: ['make', '-j@PARALLELISM@']
        install:
          - args: ['make', 'DESTDIR=@SYSROOT_DIR@', 'install']

tasks:
  - name: make-iso
    tools_required:
      - host-limine
    pkgs_required:
      - base-files
      - kernel
      - init
      - bash
      - coreutils
    artifact_files:
      - name: vinix.iso
        path: '@BUILD_ROOT@'
    args:
      - '@SOURCE_ROOT@/make-iso.sh'
      - '@BUILD_ROOT@'
      - '@SOURCE_ROOT@'
      - '@SYSROOT_DIR@'
    workdir: '@BUILD_ROOT@'

packages:
  - name: vc
    from_source: vc

  - name: base-files
    source:
      subdir: ''
    build:
      - args: |
          set -e
          cp -rv "@THIS_SOURCE_DIR@/." "@THIS_COLLECT_DIR@/"
          rm -v "@THIS_COLLECT_DIR@/"*.xbstrap
          for f in $(find @THIS_COLLECT_DIR@ -name KEEP); do rm -v "$f"; done

  - name: kernel
    source:
      subdir: ''
    tools_required:
      - host-v
      - host-gcc
    pkgs_required:
      - glibc
    build:
      - args: |
          set -e
          cd "@THIS_SOURCE_DIR@"
          make PROD=@OPTION:prod@ CC=x86_64-vinix-linux-gnu-gcc LD=x86_64-vinix-linux-gnu-ld OBJDUMP=x86_64-vinix-linux-gnu-objdump
          make install PREFIX=/boot DESTDIR="@THIS_COLLECT_DIR@"

  - name: init
    source:
      subdir: ''
    tools_required:
      - host-v
      - host-gcc
    pkgs_required:
      - glibc
    build:
      - args: |
          set -e
          cd "@THIS_SOURCE_DIR@"
          VMODULES=/tmp/.vmodules v -cc x86_64-vinix-linux-gnu-gcc -os vinix .
          mkdir -p "@THIS_COLLECT_DIR@/sbin"
          cp init "@THIS_COLLECT_DIR@/sbin/"

  - name: glibc
    implict_package: true
    from_source: glibc
    tools_required:
      - tool: host-gcc
        stage_dependencies: [libgcc]
    pkgs_required:
      - linux-headers
    configure:
      - args: |
          set -e
          rm -rf *
      - args: |
          set -e
          "@THIS_SOURCE_DIR@/configure" \
              --prefix=/usr \
              --host=x86_64-vinix-linux-gnu \
              --build="$("@SOURCE_ROOT@/3rdparty/gcc/config.guess")" \
              --enable-kernel=3.2 \
              --with-headers=@SYSROOT_DIR@/usr/include \
              libc_cv_slibdir=/usr/lib
        environ:
          CFLAGS: '-O2 -pipe'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'DESTDIR=@THIS_COLLECT_DIR@', 'install']
      - args: ['ln', '-sf', 'usr/lib', '@THIS_COLLECT_DIR@/lib64']
      - args: ['ln', '-sf', 'usr/lib', '@THIS_COLLECT_DIR@/lib']

  - name: linux-headers
    implict_package: true
    tools_required:
      - tool: host-gcc
        stage_dependencies: [bootstrap-libgcc]
    source:
      subdir: '3rdparty'
      url: 'https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.14.9.tar.xz'
      format: 'tar.xz'
      extract_path: 'linux-5.14.9'
      patch-path-strip: 1
      version: '5.14.9'
    build:
      - args: |
          set -e
          cp -rv "@THIS_SOURCE_DIR@/." "./"
          make mrproper
          make headers
          find usr/include -name '.*' -delete
          rm usr/include/Makefile
          mkdir -p @THIS_COLLECT_DIR@/usr/include
          cp -rv usr/include/. @THIS_COLLECT_DIR@/usr/include/

  - name: bash
    source:
      subdir: '3rdparty'
      url: 'https://ftp.gnu.org/gnu/bash/bash-5.1.8.tar.gz'
      format: 'tar.gz'
      extract_path: 'bash-5.1.8'
      patch-path-strip: 1
      version: '5.1.8'
    tools_required:
      - host-gcc
    pkgs_required:
      - glibc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-vinix-linux-gnu'
        - '--prefix=/usr'
        - '--without-bash-malloc'
        - '--disable-nls'
        - 'CFLAGS=-O2 -pipe'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'DESTDIR=@THIS_COLLECT_DIR@', 'install-strip']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/bin']
      - args: ['ln', '-s', '/usr/bin/bash', '@THIS_COLLECT_DIR@/bin/bash']
      - args: ['ln', '-s', '/usr/bin/bash', '@THIS_COLLECT_DIR@/bin/sh']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/etc/bash']
      - args: ['cp', '@SOURCE_ROOT@/extra-files/bash/profile', '@THIS_COLLECT_DIR@/etc/']
      - args: ['cp', '@SOURCE_ROOT@/extra-files/bash/bashrc', '@THIS_COLLECT_DIR@/etc/bash/']

  - name: coreutils
    source:
      subdir: '3rdparty'
      url: 'https://ftp.gnu.org/gnu/coreutils/coreutils-9.0.tar.xz'
      format: 'tar.xz'
      extract_path: 'coreutils-9.0'
      patch-path-strip: 1
      version: '9.0'
    tools_required:
      - host-gcc
    pkgs_required:
      - glibc
    configure:
      # Huge hack: coreutils does not compile the build-machine binary make-prime-list
      # using the build-machine compiler. Hence, build and invoke the binary manually here.
      - args:
        - '@THIS_SOURCE_DIR@/configure'
      - args: ['make', 'src/make-prime-list']
      - args: |
          set -e
          ./src/make-prime-list 5000 > "@THIS_SOURCE_DIR@/src/primes.h"
          rm -rf *
      # Now compile coreutils for the correct target.
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-vinix-linux-gnu'
        - '--prefix=/usr'
        - 'CFLAGS=-Wno-error -O2 -pipe'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install-strip']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
