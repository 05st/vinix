diff --git a/3rdparty/limine-orig/stage23/lib/term.h b/3rdparty/limine-workdir/stage23/lib/term.h
index d95f350..f74b0ef 100644
--- a/3rdparty/limine-orig/stage23/lib/term.h
+++ b/3rdparty/limine-workdir/stage23/lib/term.h
@@ -24,6 +24,11 @@ extern void (*term_move_character)(int new_x, int new_y, int old_x, int old_y);
 extern void (*term_double_buffer)(bool status);
 extern void (*term_double_buffer_flush)(void);
 
+#define TERM_CB_DEC 10
+#define TERM_CB_BELL 20
+
+extern void (*term_callback)(uint64_t type, uint64_t extra, uint64_t esc_val_count, uint64_t esc_values);
+
 void term_vbe(int width, int height);
 void term_textmode(void);
 void term_write(const char *buf, size_t count);
diff --git a/3rdparty/limine-orig/stage23/lib/term.s2.c b/3rdparty/limine-workdir/stage23/lib/term.s2.c
index a89e4ea..60f27f4 100644
--- a/3rdparty/limine-orig/stage23/lib/term.s2.c
+++ b/3rdparty/limine-workdir/stage23/lib/term.s2.c
@@ -6,6 +6,7 @@
 #include <lib/image.h>
 #include <lib/blib.h>
 #include <drivers/vga_textmode.h>
+#include <lib/print.h>
 
 // Tries to implement this standard for terminfo
 // https://man7.org/linux/man-pages/man4/console_codes.4.html
@@ -38,6 +39,8 @@ void (*term_double_buffer_flush)(void);
 
 int term_rows, term_cols;
 
+void (*term_callback)(uint64_t type, uint64_t extra, uint64_t esc_val_count, uint64_t esc_values) = NULL;
+
 #if bios == 1
 void term_textmode(void) {
     term_backend = NOT_READY;
@@ -191,6 +194,9 @@ static void dec_private_parse(uint8_t c) {
             }
         }
     }
+
+    if (term_callback != NULL)
+        term_callback(TERM_CB_DEC, c, esc_values_i, (uintptr_t)esc_values);
 }
 
 static void control_sequence_parse(uint8_t c) {
diff --git a/3rdparty/limine-orig/stage23/protos/stivale2.c b/3rdparty/limine-workdir/stage23/protos/stivale2.c
index 945f962..fbf5588 100644
--- a/3rdparty/limine-orig/stage23/protos/stivale2.c
+++ b/3rdparty/limine-workdir/stage23/protos/stivale2.c
@@ -58,6 +58,8 @@ static void *get_tag(struct stivale2_header *s, uint64_t id) {
 extern symbol stivale2_term_write_entry;
 void *stivale2_rt_stack = NULL;
 void *stivale2_term_buf = NULL;
+uint64_t stivale2_term_callback_ptr = 0;
+void stivale2_term_callback(uint64_t, uint64_t, uint64_t, uint64_t);
 #endif
 
 void stivale2_load(char *config, char *cmdline, bool pxe, void *efi_system_table) {
@@ -407,6 +409,17 @@ failed_to_load_header_section:
         struct stivale2_struct_tag_terminal *tag = ext_mem_alloc(sizeof(struct stivale2_struct_tag_terminal));
         tag->tag.identifier = STIVALE2_STRUCT_TAG_TERMINAL_ID;
 
+        if (terminal_hdr_tag->flags & (1 << 0)) {
+            // We provide callback
+            tag->flags |= (1 << 2);
+#if defined (__i386__)
+            term_callback = stivale2_term_callback;
+            stivale2_term_callback_ptr = terminal_hdr_tag->callback;
+#elif defined (__x86_64__)
+            term_callback = (void *)terminal_hdr_tag->callback;
+#endif
+        }
+
         // We provide max allowed string length
         tag->flags |= (1 << 1);
 
diff --git a/3rdparty/limine-orig/stage23/protos/stivale2_rt.asm b/3rdparty/limine-workdir/stage23/protos/stivale2_rt.asm
index 26517ca..873a8c4 100644
--- a/3rdparty/limine-orig/stage23/protos/stivale2_rt.asm
+++ b/3rdparty/limine-workdir/stage23/protos/stivale2_rt.asm
@@ -15,10 +15,60 @@ section .text
 extern term_write
 extern stivale2_term_buf
 extern stivale2_rt_stack
+extern stivale2_term_callback_ptr
 
+global stivale2_term_callback
+stivale2_term_callback:
+bits 32
+    push ebp
+    mov ebp, esp
+
+    push ebx
+    push esi
+    push edi
+
+    ; Go 64
+    push 0x28
+    push .mode64
+    retfd
 bits 64
+  .mode64:
+    mov eax, 0x30
+    mov ds, ax
+    mov es, ax
+    mov ss, ax
+
+    mov edi, [rbp + 8]
+    mov esi, [rbp + 12]
+    mov edx, [rbp + 16]
+    mov ecx, [rbp + 20]
+
+    mov rbx, rsp
+    mov rsp, [user_stack]
+    call [stivale2_term_callback_ptr]
+    mov rsp, rbx
+
+    ; Go 32
+    push 0x18
+    push .mode32
+    retfq
+bits 32
+  .mode32:
+    mov eax, 0x20
+    mov ds, ax
+    mov es, ax
+    mov ss, ax
+
+    pop edi
+    pop esi
+    pop ebx
+    pop ebp
+
+    ret
+
 global stivale2_term_write_entry
 stivale2_term_write_entry:
+bits 64
     push rbx
     push rbp
     push r12
diff --git a/3rdparty/limine-orig/stage23/protos/stivale2_rt.asm32 b/3rdparty/limine-workdir/stage23/protos/stivale2_rt.asm32
index d39e5a3..ac17c0f 100644
--- a/3rdparty/limine-orig/stage23/protos/stivale2_rt.asm32
+++ b/3rdparty/limine-workdir/stage23/protos/stivale2_rt.asm32
@@ -17,6 +17,69 @@ section .text
 extern term_write
 extern stivale2_term_buf
 extern stivale2_rt_stack
+extern stivale2_term_callback_ptr
+
+global stivale2_term_callback
+stivale2_term_callback:
+bits 32
+    push ebp
+    mov ebp, esp
+
+    push ebx
+    push esi
+    push edi
+
+    ; Go 64
+    push 0x28
+    call .p1
+  .p1:
+    pop eax
+    add eax, 6
+    push eax
+    retfd
+bits 64
+  .mode64:
+    mov eax, 0x30
+    mov ds, ax
+    mov es, ax
+    mov ss, ax
+
+    mov edi, [rbp + 8]
+    mov esi, [rbp + 12]
+    mov edx, [rbp + 16]
+    mov ecx, [rbp + 20]
+
+    call .get_got
+  .get_got:
+    pop rax
+    add rax, _GLOBAL_OFFSET_TABLE_ + $$ - .get_got wrt ..gotpc
+
+    mov rbx, rsp
+    mov rsp, [rax + user_stack wrt ..gotoff]
+    call [rax + stivale2_term_callback_ptr wrt ..gotoff]
+    mov rsp, rbx
+
+    ; Go 32
+    push 0x18
+    call .p2
+  .p2:
+    pop rax
+    add rax, 8
+    push rax
+    retfq
+bits 32
+  .mode32:
+    mov eax, 0x20
+    mov ds, ax
+    mov es, ax
+    mov ss, ax
+
+    pop edi
+    pop esi
+    pop ebx
+    pop ebp
+
+    ret
 
 bits 64
 global stivale2_term_write_entry
